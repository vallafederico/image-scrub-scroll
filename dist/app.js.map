{
  "version": 3,
  "sources": ["../node_modules/.pnpm/@studio-freight+lenis@1.0.37/node_modules/@studio-freight/lenis/src/maths.js", "../node_modules/.pnpm/@studio-freight+lenis@1.0.37/node_modules/@studio-freight/lenis/src/animate.js", "../node_modules/.pnpm/@studio-freight+lenis@1.0.37/node_modules/@studio-freight/lenis/src/dimensions.js", "../node_modules/.pnpm/@studio-freight+lenis@1.0.37/node_modules/@studio-freight/lenis/src/debounce.js", "../node_modules/.pnpm/@studio-freight+lenis@1.0.37/node_modules/@studio-freight/lenis/src/emitter.js", "../node_modules/.pnpm/@studio-freight+lenis@1.0.37/node_modules/@studio-freight/lenis/src/virtual-scroll.js", "../node_modules/.pnpm/@studio-freight+lenis@1.0.37/node_modules/@studio-freight/src/index.ts", "../src/scroll.js", "../src/clientRect.js", "../src/math.js", "../src/observe.js", "../src/track.js", "../src/scroller.js", "../src/app.js"],
  "sourcesContent": ["// Clamp a value between a minimum and maximum value\r\nexport function clamp(min, input, max) {\r\n  return Math.max(min, Math.min(input, max))\r\n}\r\n\r\n// Truncate a floating-point number to a specified number of decimal places\r\nexport function truncate(value, decimals = 0) {\r\n  return parseFloat(value.toFixed(decimals))\r\n}\r\n\r\n// Linearly interpolate between two values using an amount (0 <= t <= 1)\r\nexport function lerp(x, y, t) {\r\n  return (1 - t) * x + t * y\r\n}\r\n\r\n// http://www.rorydriscoll.com/2016/03/07/frame-rate-independent-damping-using-lerp/\r\nexport function damp(x, y, lambda, dt) {\r\n  return lerp(x, y, 1 - Math.exp(-lambda * dt))\r\n}\r\n\r\n// Calculate the modulo of the dividend and divisor while keeping the result within the same sign as the divisor\r\n// https://anguscroll.com/just/just-modulo\r\nexport function modulo(n, d) {\r\n  return ((n % d) + d) % d\r\n}\r\n", "import { clamp, damp } from './maths'\r\n\r\n// Animate class to handle value animations with lerping or easing\r\nexport class Animate {\r\n  // Advance the animation by the given delta time\r\n  advance(deltaTime) {\r\n    if (!this.isRunning) return\r\n\r\n    let completed = false\r\n\r\n    if (this.lerp) {\r\n      this.value = damp(this.value, this.to, this.lerp * 60, deltaTime)\r\n      if (Math.round(this.value) === this.to) {\r\n        this.value = this.to\r\n        completed = true\r\n      }\r\n    } else {\r\n      this.currentTime += deltaTime\r\n      const linearProgress = clamp(0, this.currentTime / this.duration, 1)\r\n\r\n      completed = linearProgress >= 1\r\n      const easedProgress = completed ? 1 : this.easing(linearProgress)\r\n      this.value = this.from + (this.to - this.from) * easedProgress\r\n    }\r\n\r\n    // Call the onUpdate callback with the current value and completed status\r\n    this.onUpdate?.(this.value, completed)\r\n\r\n    if (completed) {\r\n      this.stop()\r\n    }\r\n  }\r\n\r\n  // Stop the animation\r\n  stop() {\r\n    this.isRunning = false\r\n  }\r\n\r\n  // Set up the animation from a starting value to an ending value\r\n  // with optional parameters for lerping, duration, easing, and onUpdate callback\r\n  fromTo(\r\n    from,\r\n    to,\r\n    { lerp = 0.1, duration = 1, easing = (t) => t, onStart, onUpdate }\r\n  ) {\r\n    this.from = this.value = from\r\n    this.to = to\r\n    this.lerp = lerp\r\n    this.duration = duration\r\n    this.easing = easing\r\n    this.currentTime = 0\r\n    this.isRunning = true\r\n\r\n    onStart?.()\r\n    this.onUpdate = onUpdate\r\n  }\r\n}\r\n", "import { debounce } from './debounce'\r\n\r\nexport class Dimensions {\r\n  constructor({ wrapper, content, autoResize = true } = {}) {\r\n    this.wrapper = wrapper\r\n    this.content = content\r\n\r\n    if (autoResize) {\r\n      const resize = debounce(this.resize, 250)\r\n\r\n      if (this.wrapper !== window) {\r\n        this.wrapperResizeObserver = new ResizeObserver(resize)\r\n        this.wrapperResizeObserver.observe(this.wrapper)\r\n      }\r\n\r\n      this.contentResizeObserver = new ResizeObserver(resize)\r\n      this.contentResizeObserver.observe(this.content)\r\n    }\r\n\r\n    this.resize()\r\n  }\r\n\r\n  destroy() {\r\n    this.wrapperResizeObserver?.disconnect()\r\n    this.contentResizeObserver?.disconnect()\r\n  }\r\n\r\n  resize = () => {\r\n    this.onWrapperResize()\r\n    this.onContentResize()\r\n  }\r\n\r\n  onWrapperResize = () => {\r\n    if (this.wrapper === window) {\r\n      this.width = window.innerWidth\r\n      this.height = window.innerHeight\r\n    } else {\r\n      this.width = this.wrapper.clientWidth\r\n      this.height = this.wrapper.clientHeight\r\n    }\r\n  }\r\n\r\n  onContentResize = () => {\r\n    this.scrollHeight = this.content.scrollHeight\r\n    this.scrollWidth = this.content.scrollWidth\r\n  }\r\n\r\n  get limit() {\r\n    return {\r\n      x: this.scrollWidth - this.width,\r\n      y: this.scrollHeight - this.height,\r\n    }\r\n  }\r\n}\r\n", "export function debounce(callback, delay) {\r\n  let timer\r\n  return function () {\r\n    let args = arguments\r\n    let context = this\r\n    clearTimeout(timer)\r\n    timer = setTimeout(function () {\r\n      callback.apply(context, args)\r\n    }, delay)\r\n  }\r\n}\r\n", "export class Emitter {\r\n  constructor() {\r\n    this.events = {}\r\n  }\r\n\r\n  emit(event, ...args) {\r\n    let callbacks = this.events[event] || []\r\n    for (let i = 0, length = callbacks.length; i < length; i++) {\r\n      callbacks[i](...args)\r\n    }\r\n  }\r\n\r\n  on(event, cb) {\r\n    // Add the callback to the event's callback list, or create a new list with the callback\r\n    this.events[event]?.push(cb) || (this.events[event] = [cb])\r\n\r\n    // Return an unsubscribe function\r\n    return () => {\r\n      this.events[event] = this.events[event]?.filter((i) => cb !== i)\r\n    }\r\n  }\r\n\r\n  off(event, callback) {\r\n    this.events[event] = this.events[event]?.filter((i) => callback !== i)\r\n  }\r\n\r\n  destroy() {\r\n    this.events = {}\r\n  }\r\n}\r\n", "import { Emitter } from './emitter'\r\nimport { clamp } from './maths'\r\n\r\nexport class VirtualScroll {\r\n  constructor(\r\n    element,\r\n    { wheelMultiplier = 1, touchMultiplier = 2, normalizeWheel = false }\r\n  ) {\r\n    this.element = element\r\n    this.wheelMultiplier = wheelMultiplier\r\n    this.touchMultiplier = touchMultiplier\r\n    this.normalizeWheel = normalizeWheel\r\n\r\n    this.touchStart = {\r\n      x: null,\r\n      y: null,\r\n    }\r\n\r\n    this.emitter = new Emitter()\r\n\r\n    this.element.addEventListener('wheel', this.onWheel, { passive: false })\r\n    this.element.addEventListener('touchstart', this.onTouchStart, {\r\n      passive: false,\r\n    })\r\n    this.element.addEventListener('touchmove', this.onTouchMove, {\r\n      passive: false,\r\n    })\r\n    this.element.addEventListener('touchend', this.onTouchEnd, {\r\n      passive: false,\r\n    })\r\n  }\r\n\r\n  // Add an event listener for the given event and callback\r\n  on(event, callback) {\r\n    return this.emitter.on(event, callback)\r\n  }\r\n\r\n  // Remove all event listeners and clean up\r\n  destroy() {\r\n    this.emitter.destroy()\r\n\r\n    this.element.removeEventListener('wheel', this.onWheel, {\r\n      passive: false,\r\n    })\r\n    this.element.removeEventListener('touchstart', this.onTouchStart, {\r\n      passive: false,\r\n    })\r\n    this.element.removeEventListener('touchmove', this.onTouchMove, {\r\n      passive: false,\r\n    })\r\n    this.element.removeEventListener('touchend', this.onTouchEnd, {\r\n      passive: false,\r\n    })\r\n  }\r\n\r\n  // Event handler for 'touchstart' event\r\n  onTouchStart = (event) => {\r\n    const { clientX, clientY } = event.targetTouches\r\n      ? event.targetTouches[0]\r\n      : event\r\n\r\n    this.touchStart.x = clientX\r\n    this.touchStart.y = clientY\r\n\r\n    this.lastDelta = {\r\n      x: 0,\r\n      y: 0,\r\n    }\r\n\r\n    this.emitter.emit('scroll', {\r\n      deltaX: 0,\r\n      deltaY: 0,\r\n      event,\r\n    })\r\n  }\r\n\r\n  // Event handler for 'touchmove' event\r\n  onTouchMove = (event) => {\r\n    const { clientX, clientY } = event.targetTouches\r\n      ? event.targetTouches[0]\r\n      : event\r\n\r\n    const deltaX = -(clientX - this.touchStart.x) * this.touchMultiplier\r\n    const deltaY = -(clientY - this.touchStart.y) * this.touchMultiplier\r\n\r\n    this.touchStart.x = clientX\r\n    this.touchStart.y = clientY\r\n\r\n    this.lastDelta = {\r\n      x: deltaX,\r\n      y: deltaY,\r\n    }\r\n\r\n    this.emitter.emit('scroll', {\r\n      deltaX,\r\n      deltaY,\r\n      event,\r\n    })\r\n  }\r\n\r\n  onTouchEnd = (event) => {\r\n    this.emitter.emit('scroll', {\r\n      deltaX: this.lastDelta.x,\r\n      deltaY: this.lastDelta.y,\r\n      event,\r\n    })\r\n  }\r\n\r\n  // Event handler for 'wheel' event\r\n  onWheel = (event) => {\r\n    let { deltaX, deltaY } = event\r\n\r\n    if (this.normalizeWheel) {\r\n      deltaX = clamp(-100, deltaX, 100)\r\n      deltaY = clamp(-100, deltaY, 100)\r\n    }\r\n\r\n    deltaX *= this.wheelMultiplier\r\n    deltaY *= this.wheelMultiplier\r\n\r\n    this.emitter.emit('scroll', { deltaX, deltaY, event })\r\n  }\r\n}\r\n", "import { version } from '../package.json'\r\nimport { Animate } from './animate'\r\nimport { Dimensions } from './dimensions'\r\nimport { Emitter } from './emitter'\r\nimport { clamp, modulo } from './maths'\r\nimport { VirtualScroll } from './virtual-scroll'\r\n\r\n// Technical explanation\r\n// - listen to 'wheel' events\r\n// - prevent 'wheel' event to prevent scroll\r\n// - normalize wheel delta\r\n// - add delta to targetScroll\r\n// - animate scroll to targetScroll (smooth context)\r\n// - if animation is not running, listen to 'scroll' events (native context)\r\n\r\ntype EasingFunction = (t: number) => number\r\ntype Orientation = 'vertical' | 'horizontal'\r\ntype GestureOrientation = 'vertical' | 'horizontal' | 'both'\r\n\r\nexport type LenisOptions = {\r\n  wrapper?: Window | HTMLElement\r\n  content?: HTMLElement\r\n  wheelEventsTarget?: Window | HTMLElement\r\n  eventsTarget?: Window | HTMLElement\r\n  smoothWheel?: boolean\r\n  syncTouch?: boolean\r\n  syncTouchLerp?: number\r\n  touchInertiaMultiplier?: number\r\n  duration?: number\r\n  easing?: EasingFunction\r\n  lerp?: number\r\n  infinite?: boolean\r\n  orientation?: Orientation\r\n  gestureOrientation?: GestureOrientation\r\n  touchMultiplier?: number\r\n  wheelMultiplier?: number\r\n  normalizeWheel?: boolean\r\n  autoResize?: boolean\r\n}\r\n\r\nexport default class Lenis {\r\n  __isSmooth: boolean = false // true if scroll should be animated\r\n  __isScrolling: boolean = false // true when scroll is animating\r\n  __isStopped: boolean = false // true if user should not be able to scroll - enable/disable programmatically\r\n  __isLocked: boolean = false // same as isStopped but enabled/disabled when scroll reaches target\r\n\r\n  constructor({\r\n    wrapper = window,\r\n    content = document.documentElement,\r\n    wheelEventsTarget = wrapper, // deprecated\r\n    eventsTarget = wheelEventsTarget,\r\n    smoothWheel = true,\r\n    syncTouch = false,\r\n    syncTouchLerp = 0.075,\r\n    touchInertiaMultiplier = 35,\r\n    duration, // in seconds\r\n    easing = (t) => Math.min(1, 1.001 - Math.pow(2, -10 * t)),\r\n    lerp = !duration && 0.1,\r\n    infinite = false,\r\n    orientation = 'vertical', // vertical, horizontal\r\n    gestureOrientation = 'vertical', // vertical, horizontal, both\r\n    touchMultiplier = 1,\r\n    wheelMultiplier = 1,\r\n    normalizeWheel = false, // deprecated\r\n    autoResize = true,\r\n  }: LenisOptions = {}) {\r\n    window.lenisVersion = version\r\n\r\n    // if wrapper is html or body, fallback to window\r\n    if (wrapper === document.documentElement || wrapper === document.body) {\r\n      wrapper = window\r\n    }\r\n\r\n    this.options = {\r\n      wrapper,\r\n      content,\r\n      wheelEventsTarget,\r\n      eventsTarget,\r\n      smoothWheel,\r\n      syncTouch,\r\n      syncTouchLerp,\r\n      touchInertiaMultiplier,\r\n      duration,\r\n      easing,\r\n      lerp,\r\n      infinite,\r\n      gestureOrientation,\r\n      orientation,\r\n      touchMultiplier,\r\n      wheelMultiplier,\r\n      normalizeWheel,\r\n      autoResize,\r\n    }\r\n\r\n    this.animate = new Animate()\r\n    this.emitter = new Emitter()\r\n    this.dimensions = new Dimensions({ wrapper, content, autoResize })\r\n    this.toggleClassName('lenis', true)\r\n\r\n    this.velocity = 0\r\n    this.isLocked = false\r\n    this.isStopped = false\r\n    this.isSmooth = syncTouch || smoothWheel\r\n    this.isScrolling = false\r\n    this.targetScroll = this.animatedScroll = this.actualScroll\r\n\r\n    this.options.wrapper.addEventListener('scroll', this.onNativeScroll, {\r\n      passive: false,\r\n    })\r\n\r\n    this.virtualScroll = new VirtualScroll(eventsTarget, {\r\n      touchMultiplier,\r\n      wheelMultiplier,\r\n      normalizeWheel,\r\n    })\r\n    this.virtualScroll.on('scroll', this.onVirtualScroll)\r\n  }\r\n\r\n  destroy() {\r\n    this.emitter.destroy()\r\n\r\n    this.options.wrapper.removeEventListener('scroll', this.onNativeScroll, {\r\n      passive: false,\r\n    })\r\n\r\n    this.virtualScroll.destroy()\r\n    this.dimensions.destroy()\r\n\r\n    this.toggleClassName('lenis', false)\r\n    this.toggleClassName('lenis-smooth', false)\r\n    this.toggleClassName('lenis-scrolling', false)\r\n    this.toggleClassName('lenis-stopped', false)\r\n    this.toggleClassName('lenis-locked', false)\r\n  }\r\n\r\n  on(event: string, callback: Function) {\r\n    return this.emitter.on(event, callback)\r\n  }\r\n\r\n  off(event: string, callback: Function) {\r\n    return this.emitter.off(event, callback)\r\n  }\r\n\r\n  private setScroll(scroll) {\r\n    // apply scroll value immediately\r\n    if (this.isHorizontal) {\r\n      this.rootElement.scrollLeft = scroll\r\n    } else {\r\n      this.rootElement.scrollTop = scroll\r\n    }\r\n  }\r\n\r\n  private onVirtualScroll = ({ deltaX, deltaY, event }) => {\r\n    // keep zoom feature\r\n    if (event.ctrlKey) return\r\n\r\n    const isTouch = event.type.includes('touch')\r\n    const isWheel = event.type.includes('wheel')\r\n\r\n    const isTapToStop =\r\n      this.options.syncTouch && isTouch && event.type === 'touchstart'\r\n\r\n    if (isTapToStop) {\r\n      this.reset()\r\n      return\r\n    }\r\n\r\n    const isClick = deltaX === 0 && deltaY === 0 // click event\r\n\r\n    // const isPullToRefresh =\r\n    //   this.options.gestureOrientation === 'vertical' &&\r\n    //   this.scroll === 0 &&\r\n    //   !this.options.infinite &&\r\n    //   deltaY <= 5 // touch pull to refresh, not reliable yet\r\n\r\n    const isUnknownGesture =\r\n      (this.options.gestureOrientation === 'vertical' && deltaY === 0) ||\r\n      (this.options.gestureOrientation === 'horizontal' && deltaX === 0)\r\n\r\n    if (isClick || isUnknownGesture) {\r\n      // console.log('prevent')\r\n      return\r\n    }\r\n\r\n    // catch if scrolling on nested scroll elements\r\n    let composedPath = event.composedPath()\r\n    composedPath = composedPath.slice(0, composedPath.indexOf(this.rootElement)) // remove parents elements\r\n\r\n    if (\r\n      !!composedPath.find(\r\n        (node) =>\r\n          node.hasAttribute?.('data-lenis-prevent') ||\r\n          (isTouch && node.hasAttribute?.('data-lenis-prevent-touch')) ||\r\n          (isWheel && node.hasAttribute?.('data-lenis-prevent-wheel')) ||\r\n          node.classList?.contains('lenis') // nested lenis instance\r\n      )\r\n    )\r\n      return\r\n\r\n    if (this.isStopped || this.isLocked) {\r\n      event.preventDefault()\r\n      return\r\n    }\r\n\r\n    this.isSmooth =\r\n      (this.options.syncTouch && isTouch) ||\r\n      (this.options.smoothWheel && isWheel)\r\n\r\n    if (!this.isSmooth) {\r\n      this.isScrolling = false\r\n      this.animate.stop()\r\n      return\r\n    }\r\n\r\n    event.preventDefault()\r\n\r\n    let delta = deltaY\r\n    if (this.options.gestureOrientation === 'both') {\r\n      delta = Math.abs(deltaY) > Math.abs(deltaX) ? deltaY : deltaX\r\n    } else if (this.options.gestureOrientation === 'horizontal') {\r\n      delta = deltaX\r\n    }\r\n\r\n    const syncTouch = isTouch && this.options.syncTouch\r\n    const isTouchEnd = isTouch && event.type === 'touchend'\r\n\r\n    const hasTouchInertia = isTouchEnd && Math.abs(delta) > 5\r\n\r\n    if (hasTouchInertia) {\r\n      delta = this.velocity * this.options.touchInertiaMultiplier\r\n    }\r\n\r\n    this.scrollTo(this.targetScroll + delta, {\r\n      programmatic: false,\r\n      ...(syncTouch\r\n        ? {\r\n            lerp: hasTouchInertia ? this.options.syncTouchLerp : 1,\r\n          }\r\n        : {\r\n            lerp: this.options.lerp,\r\n            duration: this.options.duration,\r\n            easing: this.options.easing,\r\n          }),\r\n    })\r\n  }\r\n\r\n  resize() {\r\n    this.dimensions.resize()\r\n  }\r\n\r\n  private emit() {\r\n    this.emitter.emit('scroll', this)\r\n  }\r\n\r\n  private onNativeScroll = () => {\r\n    if (this.__preventNextScrollEvent) return\r\n\r\n    if (!this.isScrolling) {\r\n      const lastScroll = this.animatedScroll\r\n      this.animatedScroll = this.targetScroll = this.actualScroll\r\n      this.velocity = 0\r\n      this.direction = Math.sign(this.animatedScroll - lastScroll)\r\n      this.emit()\r\n    }\r\n  }\r\n\r\n  private reset() {\r\n    this.isLocked = false\r\n    this.isScrolling = false\r\n    this.animatedScroll = this.targetScroll = this.actualScroll\r\n    this.velocity = 0\r\n    this.animate.stop()\r\n  }\r\n\r\n  start() {\r\n    this.isStopped = false\r\n\r\n    this.reset()\r\n  }\r\n\r\n  stop() {\r\n    this.isStopped = true\r\n    this.animate.stop()\r\n\r\n    this.reset()\r\n  }\r\n\r\n  raf(time: number) {\r\n    const deltaTime = time - (this.time || time)\r\n    this.time = time\r\n\r\n    this.animate.advance(deltaTime * 0.001)\r\n  }\r\n\r\n  scrollTo(\r\n    target: number | string | HTMLElement,\r\n    {\r\n      offset = 0,\r\n      immediate = false,\r\n      lock = false,\r\n      duration = this.options.duration,\r\n      easing = this.options.easing,\r\n      lerp = !duration && this.options.lerp,\r\n      onComplete,\r\n      force = false, // scroll even if stopped\r\n      programmatic = true, // called from outside of the class\r\n    }: {\r\n      offset?: number\r\n      immediate?: boolean\r\n      lock?: boolean\r\n      duration?: number\r\n      easing?: EasingFunction\r\n      lerp?: number\r\n      onComplete?: (lenis: Lenis) => void\r\n      force?: boolean\r\n      programmatic?: boolean\r\n    } = {}\r\n  ) {\r\n    if ((this.isStopped || this.isLocked) && !force) return\r\n\r\n    // keywords\r\n    if (['top', 'left', 'start'].includes(target)) {\r\n      target = 0\r\n    } else if (['bottom', 'right', 'end'].includes(target)) {\r\n      target = this.limit\r\n    } else {\r\n      let node\r\n\r\n      if (typeof target === 'string') {\r\n        // CSS selector\r\n        node = document.querySelector(target)\r\n      } else if (target?.nodeType) {\r\n        // Node element\r\n        node = target\r\n      }\r\n\r\n      if (node) {\r\n        if (this.options.wrapper !== window) {\r\n          // nested scroll offset correction\r\n          const wrapperRect = this.options.wrapper.getBoundingClientRect()\r\n          offset -= this.isHorizontal ? wrapperRect.left : wrapperRect.top\r\n        }\r\n\r\n        const rect = node.getBoundingClientRect()\r\n\r\n        target =\r\n          (this.isHorizontal ? rect.left : rect.top) + this.animatedScroll\r\n      }\r\n    }\r\n\r\n    if (typeof target !== 'number') return\r\n\r\n    target += offset\r\n    target = Math.round(target)\r\n\r\n    if (this.options.infinite) {\r\n      if (programmatic) {\r\n        this.targetScroll = this.animatedScroll = this.scroll\r\n      }\r\n    } else {\r\n      target = clamp(0, target, this.limit)\r\n    }\r\n\r\n    if (immediate) {\r\n      this.animatedScroll = this.targetScroll = target\r\n      this.setScroll(this.scroll)\r\n      this.reset()\r\n      onComplete?.(this)\r\n      return\r\n    }\r\n\r\n    if (!programmatic) {\r\n      if (target === this.targetScroll) return\r\n\r\n      this.targetScroll = target\r\n    }\r\n\r\n    this.animate.fromTo(this.animatedScroll, target, {\r\n      duration,\r\n      easing,\r\n      lerp,\r\n      onStart: () => {\r\n        // started\r\n        if (lock) this.isLocked = true\r\n        this.isScrolling = true\r\n      },\r\n      onUpdate: (value: number, completed: boolean) => {\r\n        this.isScrolling = true\r\n\r\n        // updated\r\n        this.velocity = value - this.animatedScroll\r\n        this.direction = Math.sign(this.velocity)\r\n\r\n        this.animatedScroll = value\r\n        this.setScroll(this.scroll)\r\n\r\n        if (programmatic) {\r\n          // wheel during programmatic should stop it\r\n          this.targetScroll = value\r\n        }\r\n\r\n        if (!completed) this.emit()\r\n\r\n        if (completed) {\r\n          this.reset()\r\n          this.emit()\r\n          onComplete?.(this)\r\n\r\n          // avoid emitting event twice\r\n          this.__preventNextScrollEvent = true\r\n          requestAnimationFrame(() => {\r\n            delete this.__preventNextScrollEvent\r\n          })\r\n        }\r\n      },\r\n    })\r\n  }\r\n\r\n  get rootElement() {\r\n    return this.options.wrapper === window\r\n      ? document.documentElement\r\n      : this.options.wrapper\r\n  }\r\n\r\n  get limit() {\r\n    return this.dimensions.limit[this.isHorizontal ? 'x' : 'y']\r\n  }\r\n\r\n  get isHorizontal() {\r\n    return this.options.orientation === 'horizontal'\r\n  }\r\n\r\n  get actualScroll() {\r\n    // value browser takes into account\r\n    return this.isHorizontal\r\n      ? this.rootElement.scrollLeft\r\n      : this.rootElement.scrollTop\r\n  }\r\n\r\n  get scroll() {\r\n    return this.options.infinite\r\n      ? modulo(this.animatedScroll, this.limit)\r\n      : this.animatedScroll\r\n  }\r\n\r\n  get progress() {\r\n    // avoid progress to be NaN\r\n    return this.limit === 0 ? 1 : this.scroll / this.limit\r\n  }\r\n\r\n  get isSmooth() {\r\n    return this.__isSmooth\r\n  }\r\n\r\n  private set isSmooth(value: boolean) {\r\n    if (this.__isSmooth !== value) {\r\n      this.__isSmooth = value\r\n      this.toggleClassName('lenis-smooth', value)\r\n    }\r\n  }\r\n\r\n  get isScrolling() {\r\n    return this.__isScrolling\r\n  }\r\n\r\n  private set isScrolling(value: boolean) {\r\n    if (this.__isScrolling !== value) {\r\n      this.__isScrolling = value\r\n      this.toggleClassName('lenis-scrolling', value)\r\n    }\r\n  }\r\n\r\n  get isStopped() {\r\n    return this.__isStopped\r\n  }\r\n\r\n  private set isStopped(value: boolean) {\r\n    if (this.__isStopped !== value) {\r\n      this.__isStopped = value\r\n      this.toggleClassName('lenis-stopped', value)\r\n    }\r\n  }\r\n\r\n  get isLocked() {\r\n    return this.__isLocked\r\n  }\r\n\r\n  private set isLocked(value: boolean) {\r\n    if (this.__isLocked !== value) {\r\n      this.__isLocked = value\r\n      this.toggleClassName('lenis-locked', value)\r\n    }\r\n  }\r\n\r\n  get className() {\r\n    let className = 'lenis'\r\n    if (this.isStopped) className += ' lenis-stopped'\r\n    if (this.isLocked) className += ' lenis-locked'\r\n    if (this.isScrolling) className += ' lenis-scrolling'\r\n    if (this.isSmooth) className += ' lenis-smooth'\r\n    return className\r\n  }\r\n\r\n  private toggleClassName(name: string, value: boolean) {\r\n    this.rootElement.classList.toggle(name, value)\r\n    this.emitter.emit('className change', this)\r\n  }\r\n}\r\n", "import Lenis from \"@studio-freight/lenis\";\n\nconst lenisDefault = (t) => Math.min(1, 1.001 - Math.pow(2, -10 * t));\n\n/*\n\n<script>\n  // reset scroll to 0 with no timeouts\n  history.scrollRestoration = \"manual\";\n</script>\n\n*/\n\nexport class Scroll extends Lenis {\n  constructor() {\n    super({\n      duration: 1,\n      smoothWheel: true,\n      easing: lenisDefault,\n      orientation: \"vertical\",\n      smoothTouch: false,\n      touchMultiplier: 2,\n    });\n\n    this.isActive = true;\n    this.callbacks = [];\n\n    // this.time = 0;\n\n    this.init();\n    window.sscroll = this;\n  }\n\n  init() {\n    this.y = window.scrollY;\n    this.max = window.innerHeight;\n    this.speed = 0;\n    this.percent = this.y / (document.body.scrollHeight - window.innerHeight);\n\n    this.on(\"scroll\", ({ scroll, limit, velocity, progress }) => {\n      this.y = scroll || 0;\n      this.max = limit || window.innerHeight;\n      this.speed = velocity || 0;\n      this.percent = progress || 0;\n\n      this.callbackRaf();\n    });\n  }\n\n  to(target) {\n    this.scrollTo(target, {\n      offset: 0,\n      duration: 0.8,\n      easing: lenisDefault,\n      immediate: false,\n    });\n  }\n\n  resize() {}\n\n  render(t) {\n    if (!this.isActive) return;\n\n    this.raf(t);\n  }\n\n  set active(value) {\n    this.isActive = value;\n  }\n\n  callbackRaf() {\n    // call this in scroll method\n    this.callbacks.forEach((cb) => cb());\n  }\n\n  subscribe(callback) {\n    this.callbacks.push(callback);\n  }\n\n  unsubscribe(callback) {\n    this.callbacks = this.callbacks.filter((cb) => cb !== callback);\n  }\n\n  unsunbscribeAll() {\n    this.callbacks = [];\n  }\n}\n", "export const clientRect = (element) => {\n  const bounds = element.getBoundingClientRect();\n\n  // console.log(sscroll.y, \"scroll\");\n  let scroll = 0;\n  scroll = sscroll.y;\n\n  return {\n    // screen\n    top: bounds.top + scroll,\n    bottom: bounds.bottom + scroll,\n    width: bounds.width,\n    height: bounds.height,\n    left: bounds.left,\n    right: bounds.right,\n    wh: window.innerHeight,\n    ww: window.innerWidth,\n    offset: bounds.top + scroll,\n  };\n};\n", "// lerp\nexport function lerp(v0, v1, t) {\n  return v0 * (1 - t) + v1 * t;\n}\n\n// map\nexport function map(value, low1, high1, low2, high2) {\n  return low2 + ((high2 - low2) * (value - low1)) / (high1 - low1);\n}\n\n// clamp\nexport function clamp(min, max, num) {\n  return Math.min(Math.max(num, min), max);\n}\n\n/** ------------ Angles **/\nexport function radToDeg(r) {\n  return (r * 180) / Math.PI;\n}\n\nexport function degToRad(d) {\n  return (d * Math.PI) / 180;\n}\n\n/** ------------ Bitwise **/\nconst isPowerOfTwo = (n) => !!n && (n & (n - 1)) == 0;\n", "// import Emitter from \"tiny-emitter\";\n\nexport class Observe {\n  /**\n   * Creates an instance of Observe.\n   * @param {Object} options - The options object.\n   * @param {HTMLElement} options.element - The element to observe.\n   * @param {Object} [options.config] - The IntersectionObserver configuration options.\n   * @param {HTMLElement} [options.config.root=null] - The element that is used as the viewport for checking visibility of the target.\n   * @param {string} [options.config.margin='10px'] - Margin around the root element.\n   * @param {number} [options.config.threshold=0] - A threshold of 0.0 means that the target will be visible when it intersects with the root element.\n   * @param {boolean} [options.config.autoStart=false] - Whether to start observing the element automatically.\n   * @param {string} [options.addClass] - The CSS class to add to the element when it is in view.\n   * @param {Object} [options.cb] - The callback functions to execute when the element is in or out of view.\n   * @param {Function} [options.cb.in] - The function to execute when the element is in view.\n   * @param {Function} [options.cb.out] - The function to execute when the element is out of view.\n   */\n\n  constructor(element, { config, addClass, cb } = {}) {\n    this.element = element;\n    this.config = {\n      root: config?.root || null,\n      margin: config?.margin || \"10px\",\n      threshold: config?.threshold || 0,\n      autoStart: config?.autoStart || false,\n    };\n\n    if (cb) this.cb = cb;\n\n    if (addClass !== undefined) this.addClass = addClass;\n    this.init();\n    if (this.config.autoStart) this.start();\n  }\n\n  init() {\n    this.in = new IntersectionObserver(\n      (entries) => {\n        entries.forEach((entry) => {\n          if (entry.isIntersecting) {\n            this.isIn();\n          }\n        });\n      },\n      {\n        root: this.config.root,\n        rootMargin: this.config.margin,\n        threshold: this.config.threshold,\n      }\n    );\n\n    this.out = new IntersectionObserver(\n      (entries) => {\n        entries.forEach((entry) => {\n          if (!entry.isIntersecting) {\n            this.isOut();\n          }\n        });\n      },\n      {\n        root: this.config.root,\n        rootMargin: \"0px\",\n        threshold: 0,\n      }\n    );\n  }\n\n  start() {\n    this.in.observe(this.element);\n    this.out.observe(this.element);\n  }\n\n  stop() {\n    this.in.unobserve(this.element);\n    this.out.unobserve(this.element);\n    // this.off(\"IN\");\n    // this.off(\"OUT\");\n  }\n\n  isIn() {\n    // console.log(\"in\");\n    // this.emit(\"IN\");\n\n    if (this.cb?.in) this.cb.in();\n    if (this.addClass) this.element.classList.add(this.addClass);\n  }\n\n  isOut() {\n    // console.log(\"out\");\n    // this.emit(\"OUT\");\n\n    if (this.cb?.out) this.cb.out();\n    if (this.addClass) this.element.classList.remove(this.addClass);\n  }\n}\n", "import { clientRect } from \"./clientRect.js\";\nimport { map, clamp } from \"./math.js\";\nimport { Observe } from \"./observe.js\";\n\n/**\n * Represents a track that observes an element and renders based on scroll position.\n * @extends Observe\n * @constructor\n * @param {Object} options - The options for the track.\n * @param {HTMLElement} options.element - The element to observe.\n * @param {Object} options.config - The configuration options for the track.\n * @param {Function} options.cb - The callback function to execute on render.\n * @param {string} options.addClass - The class to add to the element on render.\n */\n\nexport class Track extends Observe {\n  value = 0;\n\n  constructor({ element, config, cb, addClass }) {\n    super({ element, config, cb, addClass });\n    this.element = element;\n\n    this.config = {\n      bounds: [0, 1],\n      top: \"bottom\",\n      bottom: \"top\",\n      ...config,\n    };\n\n    this.resize();\n\n    if (window.sscroll) window.sscroll.subscribe(this.render.bind(this));\n  }\n\n  resize() {\n    // console.log(this.element);\n    this.bounds = computeBounds(this.element, this.config);\n  }\n\n  render() {\n    this.value = clamp(\n      0,\n      1,\n      map(\n        window.sscroll.y, // value\n        this.bounds.top, // low1\n        this.bounds.bottom, // high1\n        this.config.bounds[0],\n        this.config.bounds[1] // low2, high2\n      )\n    );\n\n    // console.log(this.bounds.top, this.bounds.bottom);\n\n    this.afterRender();\n  }\n\n  afterRender() {}\n}\n\n// ---------\nfunction computeBounds(el, config) {\n  const bounds = clientRect(el);\n\n  switch (config.top) {\n    case \"top\":\n      bounds.top = bounds.top;\n      break;\n    case \"center\":\n      bounds.top = bounds.top - bounds.wh / 2;\n      break;\n    case \"bottom\":\n      bounds.top = bounds.top - bounds.wh;\n      break;\n  }\n\n  switch (config.bottom) {\n    case \"top\":\n      bounds.bottom = bounds.bottom;\n      break;\n    case \"center\":\n      bounds.bottom = bounds.bottom - bounds.wh / 2;\n      break;\n    case \"bottom\":\n      bounds.bottom = bounds.bottom - bounds.wh;\n      break;\n  }\n\n  return { ...bounds };\n}\n", "import { Track } from \"./track\";\n\nimport { lerp } from \"./math\";\n\nexport class Scroller extends Track {\n  current = 0;\n  target = 0;\n  shouldRender = false;\n\n  constructor({ element, config, cb, addClass, settings }) {\n    super({ element, config, cb, addClass });\n    this.settings = settings;\n    this.settings.end = +this.settings.end;\n\n    this.canvas = this.element.querySelector(\"canvas\");\n    this.ctx = this.canvas.getContext(\"2d\");\n\n    this.preloadImages();\n    this.drawImage(0);\n  }\n\n  preloadImages() {\n    for (let i = 0; i < this.settings.end; i++) {\n      const img = new Image();\n      img.src = this.currentFrame(i);\n    }\n  }\n\n  currentFrame(i) {\n    return `${this.settings.track}img${i.toString()}.webp`;\n  }\n\n  drawImage(i = 0) {\n    if (this.drawnFrame === i) return;\n    this.drawnFrame = i;\n\n    const img = new Image();\n    img.onload = () => {\n      this.canvas.width = img.naturalWidth;\n      this.canvas.height = img.naturalHeight;\n\n      this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n      this.ctx.drawImage(img, 0, 0);\n    };\n\n    img.src = this.currentFrame(i);\n  }\n\n  isIn() {\n    this.shouldRender = true;\n  }\n\n  isOut() {\n    this.shouldRender = false;\n  }\n\n  update() {\n    if (!this.shouldRender) return;\n\n    this.current = lerp(this.current, this.value, 0.5);\n    const frameIndex = Math.floor(this.value * this.settings.end);\n    this.drawImage(frameIndex);\n  }\n}\n", "import { Scroll } from \"./scroll\";\nimport { Scroller } from \"./scroller\";\n\nclass App {\n  items = [...document.querySelectorAll(\"[data-track]\")];\n\n  constructor() {\n    // console.log(this.items);\n\n    this.scroll = new Scroll();\n\n    setTimeout(() => {\n      this.init();\n      this.render();\n      handleResize(document.body, () => this.resize());\n    }, 0);\n  }\n\n  init() {\n    this.scrollers = this.items.map((item) => {\n      const { end, track } = item.dataset;\n      // console.log(start, end, track);\n\n      const scroller = new Scroller({\n        element: item,\n        settings: {\n          end,\n          track,\n        },\n        // config: {\n        //   bounds: [0, 1],\n        //   top: \"bottom\",\n        //   bottom: \"top\",\n        // },\n        // cb: {\n        //   in: () => {\n        //     console.log(\"in\");\n        //   },\n        //   out: () => {\n        //     console.log(\"out\");\n        //   },\n        // },\n      });\n\n      scroller.start();\n      return scroller;\n    });\n  }\n\n  resize() {\n    this.scrollers.forEach((scroller) => scroller.resize());\n  }\n\n  render(t) {\n    this.scroll.render(t);\n    this.scrollers.forEach((scroller) => scroller.update(this.scroll.y));\n    requestAnimationFrame(this.render.bind(this));\n  }\n}\n\nwindow.add = new App();\n\n// utils\nfunction handleResize(container, cb) {\n  new ResizeObserver((entry) => cb(entry[0].contentRect)).observe(container);\n}\n"],
  "mappings": "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",
  "names": ["clamp", "min", "input", "max", "Math", "Animate", "deltaTime", "this", "isRunning", "completed", "lerp", "value", "x", "y", "to", "lambda", "dt", "t", "exp", "round", "currentTime", "linearProgress", "duration", "easedProgress", "easing", "from", "onUpdate", "stop", "onStart", "Dimensions", "constructor", "wrapper", "content", "autoResize", "resize", "callback", "delay", "timer", "args", "arguments", "context", "clearTimeout", "setTimeout", "apply", "window", "wrapperResizeObserver", "ResizeObserver", "observe", "contentResizeObserver", "destroy", "disconnect", "onWrapperResize", "onContentResize", "width", "innerWidth", "height", "innerHeight", "clientWidth", "clientHeight", "scrollHeight", "scrollWidth", "limit", "Emitter", "events", "event", "callbacks", "i", "length", "cb", "push", "filter", "VirtualScroll", "element", "wheelMultiplier", "touchMultiplier", "normalizeWheel", "touchStart", "emitter", "addEventListener", "onWheel", "passive", "onTouchStart", "onTouchMove", "onTouchEnd", "on", "removeEventListener", "clientX", "clientY", "targetTouches", "lastDelta", "emit", "deltaX", "deltaY", "Lenis", "document", "documentElement", "wheelEventsTarget", "eventsTarget", "smoothWheel", "syncTouch", "syncTouchLerp", "touchInertiaMultiplier", "pow", "infinite", "orientation", "gestureOrientation", "__isSmooth", "__isScrolling", "__isStopped", "__isLocked", "onVirtualScroll", "ctrlKey", "isTouch", "type", "includes", "isWheel", "options", "reset", "isClick", "isUnknownGesture", "composedPath", "slice", "indexOf", "rootElement", "find", "node", "_a", "hasAttribute", "call", "_b", "_c", "_d", "classList", "contains", "isStopped", "isLocked", "preventDefault", "isSmooth", "isScrolling", "animate", "delta", "abs", "hasTouchInertia", "velocity", "scrollTo", "targetScroll", "Object", "assign", "programmatic", "onNativeScroll", "__preventNextScrollEvent", "lastScroll", "animatedScroll", "actualScroll", "direction", "sign", "lenisVersion", "body", "dimensions", "toggleClassName", "virtualScroll", "off", "scroll", "isHorizontal", "scrollLeft", "scrollTop", "start", "time", "advance", "target", "offset", "immediate", "lock", "onComplete", "force", "querySelector", "nodeType", "wrapperRect", "getBoundingClientRect", "left", "top", "rect", "setScroll", "fromTo", "requestAnimationFrame", "n", "d", "progress", "className", "name", "toggle", "t", "t", "t"]
}
